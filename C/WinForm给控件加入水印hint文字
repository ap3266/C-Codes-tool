转自：http://www.cnblogs.com/qingci/archive/2012/10/15/2724373.html
功能说明：C#/WinForm给控件加入水印hint文字
功能类/函数：

   public static class Win32Utility 
    {

        [DllImport("user32.dll", CharSet = CharSet.Auto)] 
        private static extern Int32 SendMessage(IntPtr hWnd, int msg, 
            int wParam, [MarshalAs(UnmanagedType.LPWStr)] string lParam);

        [DllImport("user32.dll")] 
        private static extern bool SendMessage(IntPtr hwnd, int msg, int wParam, StringBuilder lParam);

        [DllImport("user32.dll")] 
        private static extern bool GetComboBoxInfo(IntPtr hwnd, ref COMBOBOXINFO pcbi);

        [StructLayout(LayoutKind.Sequential)] 
        private struct COMBOBOXINFO 
        { 
            public int cbSize; 
            public RECT rcItem; 
            public RECT rcButton; 
            public IntPtr stateButton; 
            public IntPtr hwndCombo; 
            public IntPtr hwndItem; 
            public IntPtr hwndList; 
        }

        [StructLayout(LayoutKind.Sequential)] 
        private struct RECT 
        { 
            public int left; 
            public int top; 
            public int right; 
            public int bottom; 
        }

        private const int EM_SETCUEBANNER = 0x1501; 
        private const int EM_GETCUEBANNER = 0x1502;

        public static void SetCueText(Control control, string text) 
        { 
            if (control is ComboBox) 
            { 
                COMBOBOXINFO info = GetComboBoxInfo(control); 
                SendMessage(info.hwndItem, EM_SETCUEBANNER, 0, text); 
            } 
            else 
            { 
                SendMessage(control.Handle, EM_SETCUEBANNER, 0, text); 
            } 
        }

        private static COMBOBOXINFO GetComboBoxInfo(Control control) 
        { 
            COMBOBOXINFO info = new COMBOBOXINFO(); 
            //a combobox is made up of three controls, a button, a list and textbox; 
            //we want the textbox 
            info.cbSize = Marshal.SizeOf(info); 
            GetComboBoxInfo(control.Handle, ref info); 
            return info; 
        }

        public static string GetCueText(Control control) 
        { 
            StringBuilder builder = new StringBuilder(); 
            if (control is ComboBox) 
            { 
                COMBOBOXINFO info = new COMBOBOXINFO(); 
                //a combobox is made up of two controls, a list and textbox; 
                //we want the textbox 
                info.cbSize = Marshal.SizeOf(info); 
                GetComboBoxInfo(control.Handle, ref info); 
                SendMessage(info.hwndItem, EM_GETCUEBANNER, 0, builder); 
            } 
            else 
            { 
                SendMessage(control.Handle, EM_GETCUEBANNER, 0, builder); 
            } 
            return builder.ToString(); 
        }

    }
    调用： Win32Utility.SetCueText(textBox_UserName,"请输入用户名。。。。");
            Win32Utility.SetCueText(textBox_Password,"请输入用户名。。。。");
            
            
   方法2：转自：http://www.jb51.net/article/53993.htm
   using System;
using System.Runtime.InteropServices;
using System.Windows.Forms;
 
namespace WinFormUtilHelpV2
{
  /// <summary>
  /// 基于.NET 2.0的TextBox工具类
  /// </summary>
  public static class TextBoxToolV2
  {
    private const int EM_SETCUEBANNER = 0x1501;
    [DllImport("user32.dll", CharSet = CharSet.Auto)]
 
    private static extern Int32 SendMessage
     (IntPtr hWnd, int msg, int wParam, [MarshalAs(UnmanagedType.LPWStr)] string lParam);
 
    /// <summary>
    /// 为TextBox设置水印文字
    /// </summary>
    /// <param name="textBox">TextBox</param>
    /// <param name="watermark">水印文字</param>
    public static void SetWatermark(this TextBox textBox, string watermark)
    {
      SendMessage(textBox.Handle, EM_SETCUEBANNER, 0, watermark);
    }
    /// <summary>
    /// 清除水印文字
    /// </summary>
    /// <param name="textBox">TextBox</param>
    public static void ClearWatermark(this TextBox textBox)
    {
      SendMessage(textBox.Handle, EM_SETCUEBANNER, 0, string.Empty);
    }
  }
}

调用测试：
      private void WinTextBoxToolV2Test_Load(object sender, EventArgs e)
    {
      textBox1.SetWatermark("请输入用户名称....");
      textBox2.SetWatermark("请输入用户密码....");
    }
 
    private void button1_Click(object sender, EventArgs e)
    {
      textBox1.ClearWatermark();
      textBox2.ClearWatermark();
    }

    
